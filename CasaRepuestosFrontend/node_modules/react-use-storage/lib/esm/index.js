import{useState,useEffect,useCallback}from"react";var IS_BROWSER=typeof window!=="undefined"&&typeof navigator!=="undefined"&&typeof document!=="undefined";var evtTarget;try{evtTarget=new EventTarget();}catch(_unused){var _ref,_ref$createElement;evtTarget=(_ref=IS_BROWSER?document:{})===null||_ref===void 0?void 0:(_ref$createElement=_ref.createElement)===null||_ref$createElement===void 0?void 0:_ref$createElement.call(_ref,"phony");}var useSSRStorage=()=>(_,defaultValue)=>[defaultValue];var useStorage=storage=>(key,defaultValue)=>{var raw=storage.getItem(key);var[value,setValue]=useState(raw?JSON.parse(raw):defaultValue);var updater=useCallback(function(updatedValue){var remove=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;setValue(updatedValue);storage[remove?"removeItem":"setItem"](key,JSON.stringify(updatedValue));evtTarget.dispatchEvent(new CustomEvent("storage_change",{detail:{key}}));},[key]);defaultValue!=null&&!raw&&updater(defaultValue);useEffect(()=>{var listener=_ref2=>{var{detail}=_ref2;if(detail.key===key){var lraw=storage.getItem(key);lraw!==raw&&setValue(JSON.parse(lraw));}};evtTarget.addEventListener("storage_change",listener);return()=>evtTarget.removeEventListener("storage_change",listener);});return[value,updater,()=>updater(null,true)];};export var useLocalStorage=IS_BROWSER?useStorage(localStorage):useSSRStorage();export var useSessionStorage=IS_BROWSER?useStorage(sessionStorage):useSSRStorage();